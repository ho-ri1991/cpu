$date
	Thu May 21 00:31:57 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module integer_to_float_tb $end
$var wire 1 ! p_lost $end
$var wire 32 " a [31:0] $end
$var reg 32 # d [31:0] $end
$scope module i2f $end
$var wire 32 $ d [31:0] $end
$var wire 1 % sign $end
$var wire 5 & sa [4:0] $end
$var wire 1 ! p_lost $end
$var wire 23 ' fraction [22:0] $end
$var wire 32 ( f5 [31:0] $end
$var wire 32 ) f4 [31:0] $end
$var wire 32 * f3 [31:0] $end
$var wire 32 + f2 [31:0] $end
$var wire 32 , f1 [31:0] $end
$var wire 32 - f0 [31:0] $end
$var wire 8 . exponent [7:0] $end
$var wire 32 / a [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1001101111111111111111111111111 /
b10011011 .
b11111111111111111111111111111000 -
b1111111111111111111111111111100 ,
b11111111111111111111111111111 +
b11111111111111111111111111111 *
b11111111111111111111111111111 )
b11111111111111111111111111111 (
b11111111111111111111111 '
b11 &
0%
b11111111111111111111111111111 $
b11111111111111111111111111111 #
b1001101111111111111111111111111 "
1!
$end
#1
0!
b0 '
b10000000000000000000000000000000 -
b1000000000000000000000000000000 ,
b10000000000000000000000000000 +
b111111100000000000000000000000 "
b111111100000000000000000000000 /
b1000000000000000000000000 *
b1111111 .
b11111 &
b10000000000000000 )
b1 (
b1 #
b1 $
#2
0!
b11111111111111111111111 '
b11111111111111111111111100000000 -
b1111111111111111111111110000000 ,
b1111111111111111111111110000000 +
b1111111111111111111111110000000 *
b1001110111111111111111111111111 "
b1001110111111111111111111111111 /
b1111111111111111111111110000000 )
b10011101 .
b1 &
b1111111111111111111111110000000 (
b1111111111111111111111110000000 #
b1111111111111111111111110000000 $
#3
1!
b11111111111111111111111110000000 -
b1111111111111111111111111000000 ,
b1111111111111111111111111000000 +
b1111111111111111111111111000000 *
b1111111111111111111111111000000 )
b1111111111111111111111111000000 (
b1111111111111111111111111000000 #
b1111111111111111111111111000000 $
#4
0!
b0 '
b10011110 .
b0 &
b10000000000000000000000000000000 -
b10000000000000000000000000000000 ,
b10000000000000000000000000000000 +
b10000000000000000000000000000000 *
b11001111000000000000000000000000 "
b11001111000000000000000000000000 /
b10000000000000000000000000000000 )
1%
b10000000000000000000000000000000 (
b10000000000000000000000000000000 #
b10000000000000000000000000000000 $
#5
b11001110111111111111111111111111 "
b11001110111111111111111111111111 /
b10011101 .
b1 &
1!
b11111111111111111111111 '
b11111111111111111111111110000000 -
b1111111111111111111111111000000 ,
b1111111111111111111111111000000 +
b1111111111111111111111111000000 *
b1111111111111111111111111000000 )
b1111111111111111111111111000000 (
b10000000000000000000000001000000 #
b10000000000000000000000001000000 $
#6
0!
b0 '
b10000000000000000000000000000000 -
b1000000000000000000000000000000 ,
b10000000000000000000000000000 +
b10111111100000000000000000000000 "
b10111111100000000000000000000000 /
b1000000000000000000000000 *
b1111111 .
b11111 &
b10000000000000000 )
b1 (
b11111111111111111111111111111111 #
b11111111111111111111111111111111 $
#7
